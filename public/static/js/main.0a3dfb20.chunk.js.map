{"version":3,"sources":["components/SingleLaunch.js","components/MissionState.js","components/Lanches.js","components/Launch.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["SingleLaunch","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionState","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","class","style","width","launches","map","LAUNCH_QUERY","Launch","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","console","log","client","ApolloClient","uri","cache","InMemoryCache","App","src","logo","alt","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3dfb20.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport const SingleLaunch = ({ launch: { flight_number,\r\n    mission_name,\r\n    launch_date_local,\r\n    launch_success } }) => {\r\n\r\n\r\n    return (\r\n        <div className='card card-body mb-3'>\r\n            <div className='row'>\r\n                <div className='col-md-9'>\r\n                    <h4>Mission: <span className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <h5>Flight_number: {flight_number}</h5>\r\n                    <p>\r\n                        Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n                    </p>\r\n\r\n                </div>\r\n                <div className='col-md-3'>\r\n\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-outline-success\">\r\n                        Launch Details\r\n          </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MissionState = () => {\r\n    return (\r\n        <div className=\"my-4\">\r\n      <p className=\"text-white\">\r\n        <span className=\"px-4 py-3 m-2 bg-success  rounded-circle\" /> Is Successful\r\n      </p>\r\n      <br/>\r\n      <p className='text-white'>\r\n        <span className=\"px-4 py-3 m-2 bg-danger  rounded-circle\"/> Is Fail\r\n      </p>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { SingleLaunch } from './SingleLaunch';\r\nimport { MissionState } from './MissionState';;\r\n\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_date_local\r\n      launch_success\r\n    }\r\n  }\r\n`;\r\nconst Launches = () => {\r\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n\r\n    <div>\r\n      \r\n      <div class=\"card text-black border-danger  my-3\" style={{\r\n        width: \"70rem\"\r\n         }}>\r\n  <div class=\"card-body\">\r\n  <h1 className='display-3 my-9 ml-10rem'>Launches</h1>\r\n    \r\n  </div>\r\n</div>\r\n      <MissionState />\r\n      {data.launches.map(launch => (\r\n        <SingleLaunch key={launch.flight_number} launch={launch} />))}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Launches;\r\n\r\n","import React from 'react';\r\nimport { useQuery,gql } from '@apollo/client';\r\nimport {Link} from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n    \r\nconst LAUNCH_QUERY =gql`\r\nquery LaunchQuery($flight_number: Int) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Launch = (props) => {\r\n  let {flight_number} = props.match.params;\r\n  flight_number=parseInt(flight_number);\r\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {variables:{flight_number}});\r\n\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n    const {\r\n      mission_name,\r\n      launch_year,\r\n      launch_success,\r\n      rocket: { rocket_id, rocket_name, rocket_type }\r\n    } = data.launch;\r\n    if(data){\r\n      console.log(data)\r\n    }\r\n   \r\n\r\n  return (\r\n\r\n    <div>\r\n \r\n                  \r\n                  <div class=\"card text-black border-danger  my-3\" style={{\r\n        width: \"70rem\"\r\n         }}>\r\n  <div class=\"card-body\">\r\n  <h1 className='display-8 my-9 '><span className=\" border-success\">Mission: {mission_name}</span> </h1>\r\n    \r\n  </div>\r\n</div>\r\n               \r\n                \r\n                <div class=\"card text-black border-danger  my-3\" style={{\r\n        width: \"20rem\"\r\n         }}>\r\n  <div class=\"card-body\">\r\n  <h4 className=\"text-info border-success mb-3\">Launch Details</h4>\r\n    \r\n  </div>\r\n</div>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Successful:{' '}\r\n                    <span\r\n                      className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                      })}\r\n                    >\r\n                      {launch_success ? 'Yes' : 'No'}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                               \r\n                <div class=\"card text-black border-danger  my-3\" style={{\r\n        width: \"20rem\"\r\n         }}>\r\n  <div class=\"card-body\">\r\n  <h4 className=\"text-info border-success mb-3\">Rocket Details</h4>\r\n    \r\n  </div>\r\n</div>\r\n\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr />\r\n                <Link to=\"/\" className=\"btn btn-success \">\r\n                  Back\r\n                </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Launch;\r\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import { ApolloProvider } from '@apollo/client/react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launches from './components/Lanches';\nimport Launch from './components/Launch';\nimport logo from './logo.png';\nimport './App.css';\n\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n        \n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: 'block', margin: 'auto' }}\n          />\n         \n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}